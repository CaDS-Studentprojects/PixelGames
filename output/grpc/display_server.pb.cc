// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: display_server.proto

#include "display_server.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace LED_display {
class DISPLAY_MSGDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DISPLAY_MSG>
      _instance;
} _DISPLAY_MSG_default_instance_;
class DISPLAY_RESPONSEDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DISPLAY_RESPONSE>
      _instance;
} _DISPLAY_RESPONSE_default_instance_;
}  // namespace LED_display
namespace protobuf_display_5fserver_2eproto {
void InitDefaultsDISPLAY_MSGImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::LED_display::_DISPLAY_MSG_default_instance_;
    new (ptr) ::LED_display::DISPLAY_MSG();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LED_display::DISPLAY_MSG::InitAsDefaultInstance();
}

void InitDefaultsDISPLAY_MSG() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDISPLAY_MSGImpl);
}

void InitDefaultsDISPLAY_RESPONSEImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::LED_display::_DISPLAY_RESPONSE_default_instance_;
    new (ptr) ::LED_display::DISPLAY_RESPONSE();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LED_display::DISPLAY_RESPONSE::InitAsDefaultInstance();
}

void InitDefaultsDISPLAY_RESPONSE() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDISPLAY_RESPONSEImpl);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LED_display::DISPLAY_MSG, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LED_display::DISPLAY_MSG, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LED_display::DISPLAY_MSG, typ_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LED_display::DISPLAY_MSG, dim_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LED_display::DISPLAY_MSG, dim_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LED_display::DISPLAY_MSG, pixel_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LED_display::DISPLAY_RESPONSE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LED_display::DISPLAY_RESPONSE, success_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::LED_display::DISPLAY_MSG)},
  { 10, -1, sizeof(::LED_display::DISPLAY_RESPONSE)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::LED_display::_DISPLAY_MSG_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LED_display::_DISPLAY_RESPONSE_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "display_server.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024display_server.proto\022\013LED_display\"]\n\013D"
      "ISPLAY_MSG\022\017\n\007version\030\001 \001(\005\022\013\n\003typ\030\002 \001(\005"
      "\022\r\n\005dim_x\030\003 \001(\005\022\r\n\005dim_y\030\004 \001(\005\022\022\n\npixel_"
      "list\030\005 \001(\t\"#\n\020DISPLAY_RESPONSE\022\017\n\007succes"
      "s\030\001 \001(\0102]\n\016WS2801_Display\022K\n\016DISPLAY_CHA"
      "NGE\022\030.LED_display.DISPLAY_MSG\032\035.LED_disp"
      "lay.DISPLAY_RESPONSE\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 270);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "display_server.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_display_5fserver_2eproto
namespace LED_display {

// ===================================================================

void DISPLAY_MSG::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DISPLAY_MSG::kVersionFieldNumber;
const int DISPLAY_MSG::kTypFieldNumber;
const int DISPLAY_MSG::kDimXFieldNumber;
const int DISPLAY_MSG::kDimYFieldNumber;
const int DISPLAY_MSG::kPixelListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DISPLAY_MSG::DISPLAY_MSG()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_display_5fserver_2eproto::InitDefaultsDISPLAY_MSG();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LED_display.DISPLAY_MSG)
}
DISPLAY_MSG::DISPLAY_MSG(const DISPLAY_MSG& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pixel_list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pixel_list().size() > 0) {
    pixel_list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pixel_list_);
  }
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&dim_y_) -
    reinterpret_cast<char*>(&version_)) + sizeof(dim_y_));
  // @@protoc_insertion_point(copy_constructor:LED_display.DISPLAY_MSG)
}

void DISPLAY_MSG::SharedCtor() {
  pixel_list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dim_y_) -
      reinterpret_cast<char*>(&version_)) + sizeof(dim_y_));
  _cached_size_ = 0;
}

DISPLAY_MSG::~DISPLAY_MSG() {
  // @@protoc_insertion_point(destructor:LED_display.DISPLAY_MSG)
  SharedDtor();
}

void DISPLAY_MSG::SharedDtor() {
  pixel_list_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DISPLAY_MSG::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DISPLAY_MSG::descriptor() {
  ::protobuf_display_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_display_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DISPLAY_MSG& DISPLAY_MSG::default_instance() {
  ::protobuf_display_5fserver_2eproto::InitDefaultsDISPLAY_MSG();
  return *internal_default_instance();
}

DISPLAY_MSG* DISPLAY_MSG::New(::google::protobuf::Arena* arena) const {
  DISPLAY_MSG* n = new DISPLAY_MSG;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DISPLAY_MSG::Clear() {
// @@protoc_insertion_point(message_clear_start:LED_display.DISPLAY_MSG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pixel_list_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dim_y_) -
      reinterpret_cast<char*>(&version_)) + sizeof(dim_y_));
  _internal_metadata_.Clear();
}

bool DISPLAY_MSG::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LED_display.DISPLAY_MSG)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 typ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &typ_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 dim_x = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dim_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 dim_y = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dim_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pixel_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pixel_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pixel_list().data(), static_cast<int>(this->pixel_list().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LED_display.DISPLAY_MSG.pixel_list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LED_display.DISPLAY_MSG)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LED_display.DISPLAY_MSG)
  return false;
#undef DO_
}

void DISPLAY_MSG::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LED_display.DISPLAY_MSG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 version = 1;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->version(), output);
  }

  // int32 typ = 2;
  if (this->typ() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->typ(), output);
  }

  // int32 dim_x = 3;
  if (this->dim_x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->dim_x(), output);
  }

  // int32 dim_y = 4;
  if (this->dim_y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->dim_y(), output);
  }

  // string pixel_list = 5;
  if (this->pixel_list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pixel_list().data(), static_cast<int>(this->pixel_list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LED_display.DISPLAY_MSG.pixel_list");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->pixel_list(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LED_display.DISPLAY_MSG)
}

::google::protobuf::uint8* DISPLAY_MSG::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LED_display.DISPLAY_MSG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 version = 1;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->version(), target);
  }

  // int32 typ = 2;
  if (this->typ() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->typ(), target);
  }

  // int32 dim_x = 3;
  if (this->dim_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->dim_x(), target);
  }

  // int32 dim_y = 4;
  if (this->dim_y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->dim_y(), target);
  }

  // string pixel_list = 5;
  if (this->pixel_list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pixel_list().data(), static_cast<int>(this->pixel_list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LED_display.DISPLAY_MSG.pixel_list");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->pixel_list(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LED_display.DISPLAY_MSG)
  return target;
}

size_t DISPLAY_MSG::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LED_display.DISPLAY_MSG)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string pixel_list = 5;
  if (this->pixel_list().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pixel_list());
  }

  // int32 version = 1;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  // int32 typ = 2;
  if (this->typ() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->typ());
  }

  // int32 dim_x = 3;
  if (this->dim_x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dim_x());
  }

  // int32 dim_y = 4;
  if (this->dim_y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dim_y());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DISPLAY_MSG::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LED_display.DISPLAY_MSG)
  GOOGLE_DCHECK_NE(&from, this);
  const DISPLAY_MSG* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DISPLAY_MSG>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LED_display.DISPLAY_MSG)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LED_display.DISPLAY_MSG)
    MergeFrom(*source);
  }
}

void DISPLAY_MSG::MergeFrom(const DISPLAY_MSG& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LED_display.DISPLAY_MSG)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pixel_list().size() > 0) {

    pixel_list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pixel_list_);
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.typ() != 0) {
    set_typ(from.typ());
  }
  if (from.dim_x() != 0) {
    set_dim_x(from.dim_x());
  }
  if (from.dim_y() != 0) {
    set_dim_y(from.dim_y());
  }
}

void DISPLAY_MSG::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LED_display.DISPLAY_MSG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DISPLAY_MSG::CopyFrom(const DISPLAY_MSG& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LED_display.DISPLAY_MSG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DISPLAY_MSG::IsInitialized() const {
  return true;
}

void DISPLAY_MSG::Swap(DISPLAY_MSG* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DISPLAY_MSG::InternalSwap(DISPLAY_MSG* other) {
  using std::swap;
  pixel_list_.Swap(&other->pixel_list_);
  swap(version_, other->version_);
  swap(typ_, other->typ_);
  swap(dim_x_, other->dim_x_);
  swap(dim_y_, other->dim_y_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DISPLAY_MSG::GetMetadata() const {
  protobuf_display_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_display_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DISPLAY_RESPONSE::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DISPLAY_RESPONSE::kSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DISPLAY_RESPONSE::DISPLAY_RESPONSE()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_display_5fserver_2eproto::InitDefaultsDISPLAY_RESPONSE();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LED_display.DISPLAY_RESPONSE)
}
DISPLAY_RESPONSE::DISPLAY_RESPONSE(const DISPLAY_RESPONSE& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:LED_display.DISPLAY_RESPONSE)
}

void DISPLAY_RESPONSE::SharedCtor() {
  success_ = false;
  _cached_size_ = 0;
}

DISPLAY_RESPONSE::~DISPLAY_RESPONSE() {
  // @@protoc_insertion_point(destructor:LED_display.DISPLAY_RESPONSE)
  SharedDtor();
}

void DISPLAY_RESPONSE::SharedDtor() {
}

void DISPLAY_RESPONSE::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DISPLAY_RESPONSE::descriptor() {
  ::protobuf_display_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_display_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DISPLAY_RESPONSE& DISPLAY_RESPONSE::default_instance() {
  ::protobuf_display_5fserver_2eproto::InitDefaultsDISPLAY_RESPONSE();
  return *internal_default_instance();
}

DISPLAY_RESPONSE* DISPLAY_RESPONSE::New(::google::protobuf::Arena* arena) const {
  DISPLAY_RESPONSE* n = new DISPLAY_RESPONSE;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DISPLAY_RESPONSE::Clear() {
// @@protoc_insertion_point(message_clear_start:LED_display.DISPLAY_RESPONSE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _internal_metadata_.Clear();
}

bool DISPLAY_RESPONSE::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LED_display.DISPLAY_RESPONSE)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LED_display.DISPLAY_RESPONSE)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LED_display.DISPLAY_RESPONSE)
  return false;
#undef DO_
}

void DISPLAY_RESPONSE::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LED_display.DISPLAY_RESPONSE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LED_display.DISPLAY_RESPONSE)
}

::google::protobuf::uint8* DISPLAY_RESPONSE::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LED_display.DISPLAY_RESPONSE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LED_display.DISPLAY_RESPONSE)
  return target;
}

size_t DISPLAY_RESPONSE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LED_display.DISPLAY_RESPONSE)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DISPLAY_RESPONSE::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LED_display.DISPLAY_RESPONSE)
  GOOGLE_DCHECK_NE(&from, this);
  const DISPLAY_RESPONSE* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DISPLAY_RESPONSE>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LED_display.DISPLAY_RESPONSE)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LED_display.DISPLAY_RESPONSE)
    MergeFrom(*source);
  }
}

void DISPLAY_RESPONSE::MergeFrom(const DISPLAY_RESPONSE& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LED_display.DISPLAY_RESPONSE)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success() != 0) {
    set_success(from.success());
  }
}

void DISPLAY_RESPONSE::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LED_display.DISPLAY_RESPONSE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DISPLAY_RESPONSE::CopyFrom(const DISPLAY_RESPONSE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LED_display.DISPLAY_RESPONSE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DISPLAY_RESPONSE::IsInitialized() const {
  return true;
}

void DISPLAY_RESPONSE::Swap(DISPLAY_RESPONSE* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DISPLAY_RESPONSE::InternalSwap(DISPLAY_RESPONSE* other) {
  using std::swap;
  swap(success_, other->success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DISPLAY_RESPONSE::GetMetadata() const {
  protobuf_display_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_display_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace LED_display

// @@protoc_insertion_point(global_scope)
